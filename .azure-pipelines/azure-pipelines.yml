trigger:
    - master
pool:
    vmImage: ubuntu-16.04
steps:
    -
        bash: "PACKAGE_VERSION=$(node -p \"require('./package.json').version\")\n\nif [ -n \"$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER\" ]; then\n  VERSION_STRING=${PACKAGE_VERSION}-pr-${SYSTEM_PULLREQUEST_PULLREQUESTNUMBER}-$(git rev-parse --short HEAD)\nelse\n  VERSION_STRING=${PACKAGE_VERSION}-ci-$(git rev-parse --short HEAD)\nfi\n\nnpm --no-git-tag-version version $VERSION_STRING\necho \"##vso[build.updatebuildnumber]${VERSION_STRING}_${BUILD_BUILDID}\"\necho \"$PACKAGE_VERSION\" > version.txt\n"
        displayName: 'Set version number of package and build'
    -
        displayName: 'npm install'
        script: 'npm install'
    -
        displayName: 'Create VSIX'
        script: "sudo npm install -g vsce\nvsce package\n"
    -
        bash: "echo $(Build.SourceBranch) | sed \"s|refs/[^/]*/||\" > branch.txt\nPACKAGE_VERSION=$(cat version.txt)\nVERSION_REGEX=\"## $(echo $PACKAGE_VERSION | sed 's/\\./\\\\./g')\"\n"
        displayName: 'Get branch'
    -
        displayName: 'Stage VSIX for publishing'
        inputs:
            contents: "*.vsix\nversion.txt\nbranch.txt"
            targetFolder: $(Build.ArtifactStagingDirectory)
        task: CopyFiles@2
    -
        displayName: 'Publish VSIX'
        inputs:
            artifact: bootstrap-4-cdn-snippet
            targetPath: $(Build.ArtifactStagingDirectory)
        task: PublishPipelineArtifact@1
